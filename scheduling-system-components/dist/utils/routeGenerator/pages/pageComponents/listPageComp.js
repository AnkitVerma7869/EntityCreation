"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateListPage = generateListPage;
function generateListPage(config) {
    return "\n    'use client';\n    import { useEffect } from 'react';\n    import { useRouter } from 'next/navigation';\n    import {\n      Table,\n      TableBody,\n      TableCell,\n      TableContainer,\n      TableHead,\n      TableRow,\n      Paper,\n      IconButton,\n      Button\n    } from '@mui/material';\n    import EditIcon from '@mui/icons-material/Edit';\n    import DeleteIcon from '@mui/icons-material/Delete';\n    import { use".concat(config.entityName, "Store } from '@/store/").concat(config.entityName.toLowerCase(), "Store';\n    \n    export default function ").concat(config.entityName, "ListPage() {\n      const router = useRouter();\n      const { records, loading, error, fetchRecords, deleteRecord } = use").concat(config.entityName, "Store();\n\n      useEffect(() => {\n        fetchRecords();\n      }, []);\n\n      const handleEdit = (id: string) => {\n        router.push(`/").concat(config.entityName.toLowerCase(), "/edit/${id}`);\n      };\n\n      const handleDelete = async (id: string) => {\n        if (window.confirm('Are you sure you want to delete this record?')) {\n          await deleteRecord(id);\n        }\n      };\n\n      if (loading) {\n        return <div>Loading...</div>;\n      }\n\n      if (error) {\n        return <div className=\"text-red-500\">{error}</div>;\n      }\n\n      return (\n        <div className=\"p-6\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h1 className=\"text-2xl font-bold\">").concat(config.entityName, " List</h1>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => router.push('/").concat(config.entityName.toLowerCase(), "/create')}\n            >\n              Create New\n            </Button>\n          </div>\n\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  ").concat(config.attributes.map(function (attr) { return "\n                    <TableCell>".concat(attr.name, "</TableCell>\n                  "); }).join(''), "\n                  <TableCell align=\"right\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {records.map((record) => (\n                  <TableRow key={record.id}>\n                    ").concat(config.attributes.map(function (attr) {
        var fieldName = attr.name.replace(/\s+/g, '_');
        if (attr.dataType.toLowerCase() === 'date') {
            return "\n                          <TableCell>\n                            {record.".concat(fieldName, " ? new Date(record.").concat(fieldName, ").toLocaleDateString() : ''}\n                          </TableCell>\n                        ");
        }
        return "<TableCell>{record.".concat(fieldName, "}</TableCell>");
    }).join(''), "\n                    <TableCell align=\"right\">\n                      <IconButton\n                        onClick={() => handleEdit(record.id)}\n                        color=\"primary\"\n                        size=\"small\"\n                      >\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton\n                        onClick={() => handleDelete(record.id)}\n                        color=\"error\"\n                        size=\"small\"\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      );\n    }\n  ");
}
